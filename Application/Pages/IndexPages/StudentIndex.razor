@using Application.Services.Students
@using Common.Courses
@using Common.Students
@using Microsoft.AspNetCore.Identity
@using Microsoft.EntityFrameworkCore
@inject IStudentService StudentService
@inject NavigationManager NavManager

<table class="table">
        <thead>
        <tr class="align-middle">
            <th scope="col">Название</th>
            <th scope="col">Назначил</th>
            <th scope="col">Автор</th>
            <th scope="col">Завершенность</th>
        </tr>
        </thead>
        <tbody>
        @if (_courses.Count > 0)
        {
            @foreach (var course in _courses)
            {
                <tr class="align-middle">
                    <th scope="row">
                        <button @onclick="() => GoToCourse(course)" class="btn btn-dark align-items-center d-flex justify-content-center">
                            <strong>@course.Title</strong>
                            <i class="ph ph-caret-right ms-1" style="padding-top: 0.13em; font-size: 1.2em;"></i>
                        </button>
                    </th>
                    <td>@course.GroupCourseAssignments.First(x=>x.GroupId == _student.GroupId).Assigner.GetShortName()</td>
                    <td>@course.Author.User.GetShortName()</td>
                    <td>
                        <div class="progress my-2">
                            @{ var progress = _coursesProgresses[course];}
                            <div class="progress-bar @(progress.Finished == progress.All ? "bg-success" : "")" role="progressbar" style="width: @((int)(progress.Finished / (float)progress.All * 100f))%;" aria-valuenow="@((int)(progress.Finished / (float)progress.All * 100f))" aria-valuemin="0" aria-valuemax="100">
                                @(progress.Finished)/@(progress.All)
                            </div>
                        </div>
                    </td>
                </tr>
            }
        }
        else
        {
            <div class="d-flex align-items-center justify-content-center mt-5 text-secondary ">
                <h4 class="text-secondary">На вас пока не назначено ни одного курса 🕳️</h4>
            </div>
        }
        </tbody>
    </table>
@code {

    Student? _student;
    List<Course> _courses = new();
    Dictionary<Course, (int Finished,int All)> _coursesProgresses = new();

    protected override async Task OnInitializedAsync()
    {
        _student = await StudentService.GetCurrentStudentAsync() ?? throw new Exception("We not fount your student info!");
        _courses = await StudentService.GetStudentCoursesAsync(_student);

        foreach (var course in _courses)
        {
            _coursesProgresses.Add(course, await StudentService.GetStudentCourseProgress(_student ,course));
        }
    }

    private void GoToCourse(Course course)
    {
        NavManager.NavigateTo($"/course/{course.Id}");
    }

}