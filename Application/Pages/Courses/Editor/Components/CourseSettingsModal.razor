@using Application.Data.Courses
@using Application.Services.Courses
@inject ICourseService CourseService
@inject NavigationManager NavigationManager

@if (Course is not null)
{
<!-- @ModalId Modal -->
<div class="modal fade" id="@ModalId" tabindex="-1" aria-labelledby="@(ModalId)Label" data-bs-backdrop="static" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <form class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="@(ModalId)Label">Настройки курса</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <EditForm class="modal-body" Model="Course" OnValidSubmit="Submit">
                <DataAnnotationsValidator/>
                <div class="mb-3">
                    <label for="titleInput" class="form-label">Название курса</label>
                    <input type="text" class="form-control" id="titleInput" aria-describedby="titleHelp" @bind="Course.Title">
                    <div id="titleHelp" class="form-text">Тут должно быть сочное и привлекательное название курса. Типа "Гига питон, от малого к большему"...</div>
                    <ValidationMessage For="() => Course.Title"></ValidationMessage>
                </div>
                <div class="mb-3">
                    <label for="descInput" class="form-label">Описание курса</label>
                    <textarea type="text" class="form-control" id="descInput" @bind="Course.Desc"></textarea>
                    <div id="descHelp" class="form-text">А тут можно расписать, насколько крут данный курс!</div>
                    <ValidationMessage For="() => Course.Desc"></ValidationMessage>
                </div>
                <hr>
                <div class="mb-3 d-grid">
                    <button type="button" class="btn btn-outline-danger align-items-center d-flex justify-content-center"
                            data-bs-toggle="modal" data-bs-target="#confirmModal">
                        <i class="ph-fill ph-warning-diamond me-1" style="padding-top: 0.13em; font-size: 1.2em;"></i>
                        <span>Удалить курс</span>
                        <i class="ph-fill ph-skull ms-1" style="padding-top: 0.13em; font-size: 1.2em;"></i>
                    </button>
                </div>

            </EditForm>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Отменить</button>
                <button type="submit" class="btn btn-primary" data-bs-dismiss="modal">Сохранить</button>
            </div>
        </form>
    </div>
</div>
<!-- Delete Modal -->
<div class="modal fade" id="confirmModal" tabindex="-1" aria-labelledby="confirmModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <EditForm Model="Course" OnValidSubmit="DeleteCourse" class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title text-danger" id="confirmModalLabel">Внимание!</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Вы уверены что хотите удалить курс <strong>Python 3</strong> навсегда?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Нет</button>
                <button type="submit" class="btn btn-danger" data-bs-dismiss="modal">Да</button>
            </div>
        </EditForm>
    </div>
</div>
}

@code {
    
    [Parameter] public string ModalId { get; set; }

    [Parameter]
    public Course? Course { get; set; }
    [Parameter] public Action? OnRefresh { get; set; }
 
    private async Task Submit()
    {
        if(Course is null) return;
        await CourseService.UpdateCourseAsync(Course);
        OnRefresh?.Invoke();
    }

    private async Task DeleteCourse()
    {
        if(Course is null) return;
        await CourseService.DeleteCourse(Course);
        NavigationManager.NavigateTo("~/");
    }

}