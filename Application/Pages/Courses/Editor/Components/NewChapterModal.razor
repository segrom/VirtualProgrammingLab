@using Application.Data.Courses
@using Application.Services.Courses
@inject ICourseService CourseService
@inject NavigationManager NavigationManager

@if (_model is not null)
{
<!-- @ModalId Modal -->
<div class="modal fade" id="@ModalId" tabindex="-1" aria-labelledby="@(ModalId)Label" data-bs-backdrop="static" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <form class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="@(ModalId)Label">Настройки курса</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <EditForm class="modal-body" Model="_model" OnValidSubmit="Submit">
                <DataAnnotationsValidator/>
                <div class="mb-3">
                    <label for="titleInput" class="form-label">Название главы</label>
                    <input type="text" class="form-control" id="titleInput" aria-describedby="titleHelp" @bind="_model.Title">
                    <div id="titleHelp" class="form-text">Назовите @(_model.IsExercise ? "ваше практическое задание" : "вашу главу")</div>
                    <ValidationMessage For="() => _model.Title"></ValidationMessage>
                </div>
                <div class="mb-3">
                    <label for="range" class="form-label">Описание курса</label>
                    <input type="range" class="form-range" id="range"  @bind="_model.Duration" min="0" max="600">
                    <div id="descHelp" class="form-text">Можете задать предположительную продолжительность @(_model.IsExercise ? "выполнения задания" : "чтения главы") в минутах
                        <br/>или оставте 0 🤷‍♂️ </div>
                    <ValidationMessage For="() => _model.Duration"></ValidationMessage>
                </div>
                <div class="form-check">
                  <input class="form-check-input" type="checkbox" @bind="_model.IsExercise" id="flexCheckDefault">
                  <label class="form-check-label" for="flexCheckDefault">
                    Практическое задание
                  </label>
                </div>

            </EditForm>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Отменить</button>
                <button type="submit" class="btn btn-primary" data-bs-dismiss="modal">Сохранить</button>
            </div>
        </form>
    </div>
</div>
}



@code {
    
    [Parameter] public string ModalId { get; set; }
    [Parameter] public Course Course { get; set; }
    [Parameter] public Action? OnRefresh { get; set; }

    private Chapter _model = new();
 
    private async Task Submit()
    {
        await CourseService.AddChapterToCourse(Course, _model);
        OnRefresh?.Invoke();
    }

}