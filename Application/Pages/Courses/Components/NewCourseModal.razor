@using Microsoft.AspNetCore.Identity
@using Application.Data.Account
@using Application.Data.Lecturers
@using Application.Data.Students
@using Application.Services.Admin
@using Application.Shared.Utils
@using System.ComponentModel.DataAnnotations
@using Application.Data.Courses
@using Application.Services.Courses
@inject ICourseService CourseService
@inject NavigationManager NavigationManager
@inject ILogger<NewCourseModal> Logger

<!--@ModalId -->
<div class="modal fade" id="@ModalId" tabindex="-1" aria-labelledby="@(ModalId)Label" data-bs-backdrop="static" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        @if (Author != null)
        {
            <EditForm OnValidSubmit="Submit" class="modal-content" Model="_model">
                <DataAnnotationsValidator/>
                <div class="modal-header">
                    <h5 class="modal-title" id="@(ModalId)Label">Новый курс</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">

                    <div class="mb-3 row">
                        <label for="staticEmail" class="col-sm-2 col-form-label">Автор</label>
                        <div class="col-sm-10">
                            <input type="text" readonly class="form-control-plaintext" id="staticEmail" value="@(Author.User.GetFullName()) [@(Author.Faculty)]">
                        </div>
                    </div>
                    <div class="mb-3">
                        <label for="titleInput" class="form-label">Название курса</label>
                        <input type="text" class="form-control" id="titleInput" aria-describedby="titleHelp" @bind="_model.Title">
                        <div id="titleHelp" class="form-text">Тут должно быть сочное и привлекательное название курса. Типа "Гига питон, от малого к большему"...</div>
                        <ValidationMessage For="() => _model.Title"/>
                    </div>
                    <div class="mb-3">
                        <label for="descInput" class="form-label">Описание курса</label>
                        <textarea type="text" class="form-control" id="descInput" @bind="_model.Desc"></textarea>
                        <div id="descHelp" class="form-text">А тут можно расписать, насколько крут данный курс!</div>
                        <ValidationMessage For="() => _model.Desc"/>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Отменить</button>
                    <button class="btn btn-primary d-flex align-items-center justify-content-center" type="submit" data-bs-dismiss="modal">
                        @if (_isLoading)
                        {
                            <div class="spinner-border spinner-border-sm" role="status">
                                <span class="visually-hidden">Loading...</span>
                            </div>
                        }
                        else
                        {
                            @:Сохранить
                        }
                    </button>
                </div>
            </EditForm>
        }
        else
        {
            <div class="spinner-border spinner-border" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
        }
    </div>
</div>

@code {
    
    [Parameter] public string ModalId { get; set; }
    [Parameter] public Lecturer? Author { get; set; }
    
    Course _model = new();

    private bool _isLoading;

    private async Task Submit()
    {
        if(Author is null) return;
        _isLoading = true;
        _model.AuthorId = Author.Id;
        _model.Author = Author;
        _model.Status = CourseStatus.InDevelop;
        var result = await CourseService.CreateCourseAsync(_model);
        _isLoading = false;
        NavigationManager.NavigateTo($"/course/edit/{result.Id}");
    }

}