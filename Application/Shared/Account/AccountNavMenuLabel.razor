@using Application.Data.Account
@using Application.Data.Lecturers
@using Application.Data.Students
@using Application.Services.Lecturers
@using Application.Services.Students
@using Application.Services.Users
@using Microsoft.AspNetCore.Identity
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject SignInManager<User> SignInManager
@inject NavigationManager NavigationManager
@inject UserManager<User> UserManager
@inject ILecturerService LecturerService
@inject IStudentService StudentService
@inject IUserService UserService;

@if (_isLoading || _user is null)
{
    <div class="spinner-border" role="status">
      <span class="visually-hidden">Loading...</span>
    </div>
}
else
{
    <div class="dropdown">
        <button id="userDropDown" type="button"
                class="btn dropdown-toggle border-0 d-flex align-items-center justify-content-center"
                data-bs-toggle="dropdown" aria-expanded="false">
            <AuthorizeView Roles="@(RoleController.StudentRole)">
                <i class="ph-fill ph-student mx-1 text-secondary"></i>
                <div>
                    <strong class="text-secondary">@(_student?.Group.Name ?? "Н/Д")</strong>&nbsp @_user.Code
                </div>
            </AuthorizeView>
            <AuthorizeView Roles="@(RoleController.LecturerRole)">
                <i class="ph-fill ph-chalkboard-teacher mx-1 text-secondary"></i>
                <div>
                    <strong class="text-secondary">@(_lecturer?.Faculty ?? "Н/Д")</strong>&nbsp @_user.GetShortName()
                </div>
            </AuthorizeView>
            <AuthorizeView Roles="@(RoleController.AdminRole)">
                <i class="ph-fill ph-crown-cross mx-1" style="color: #ffc107"></i>
                <div>@_user.Code</div>
            </AuthorizeView>
        </button>

        <ul class="dropdown-menu dropdown-menu-end dropdown-menu-dark" aria-labelledby="userDropDown">
            <li>
                <NavLink class="dropdown-item disabled" disabled href="/profile">Профиль</NavLink>
            </li>
            <li>
                <form class="form-inline" href="/logout" method="post">
                    <button type="submit" class="dropdown-item">Выйти</button>
                </form>
            </li>
        </ul>
    </div>
}

@code {
    
    bool _isLoading;
    
    User? _user;
    Student? _student;
    Lecturer? _lecturer;

    protected override async Task OnInitializedAsync()
    {
        _isLoading = true;

        _user = await UserService.GetCurrentUser();
        _student = await StudentService.GetCurrentStudentAsync();
        _lecturer = await LecturerService.GetCurrentLecturerAsync();
        
        _isLoading = false;
    }
}